{"ast":null,"code":"var _jsxFileName = \"/home/beard/Documents/V1Frontend/v1-frontend/src/views/Wrap/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, InputAdornment, OutlinedInput, Zoom } from \"@material-ui/core\";\nimport { trim } from \"../../helpers\";\nimport { changeWrap, changeApproval } from \"../../store/slices/wrap-thunk\";\nimport \"./wrap.scss\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { isPendingTxn, txnButtonText } from \"../../store/slices/pending-txns-slice\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { messages } from \"../../constants/messages\";\nimport classnames from \"classnames\";\nimport { warning } from \"../../store/slices/messages-slice\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Stake() {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    provider,\n    address,\n    connect,\n    chainID,\n    checkWrongNetwork\n  } = useWeb3Context();\n  const app = useSelector(state => state.app);\n  const [view, setView] = useState(0);\n  const [quantity, setQuantity] = useState(\"\");\n  const isAppLoading = useSelector(state => state.app.loading);\n  const currentIndex = useSelector(state => {\n    return state.app.currentIndex;\n  });\n  const wrapAllowance = useSelector(state => {\n    console.log(state.account.wrapping.sBASHAllowance);\n    return state.account.wrapping.sBASHAllowance;\n  });\n  const BASHbalance = useSelector(state => {\n    return state.account.balances && state.account.balances.BASH;\n  });\n  const sBASHBalance = useSelector(state => {\n    return state.account.balances && state.account.balances.sBASH;\n  });\n  const wsBASHBalance = useSelector(state => {\n    return state.account.balances && state.account.balances.wsBASH;\n  });\n  const pendingTransactions = useSelector(state => {\n    return state.pendingTransactions;\n  });\n\n  const setMax = () => {\n    if (view === 0) {\n      setQuantity(sBASHBalance);\n    } else {\n      setQuantity(wsBASHBalance);\n    }\n  };\n\n  const onSeekApproval = async token => {\n    if (await checkWrongNetwork()) return;\n    await dispatch(changeApproval({\n      address,\n      token,\n      provider,\n      networkID: chainID\n    }));\n  };\n\n  const onChangeWrap = async action => {\n    if (await checkWrongNetwork()) return;\n\n    if (quantity === \"\" || parseFloat(quantity) === 0) {\n      dispatch(warning({\n        text: action === \"wrap\" ? messages.before_wrap : messages.before_unstake\n      }));\n    } else {\n      await dispatch(changeWrap({\n        address,\n        action,\n        value: String(quantity),\n        provider,\n        networkID: chainID\n      }));\n      setQuantity(\"\");\n    }\n  };\n\n  const hasAllowance = useCallback(token => {\n    if (token === \"sBASH\") return wrapAllowance > 0;\n    if (token === \"wsBASH\") return true;\n    return 0;\n  }, [wrapAllowance]);\n\n  const changeView = newView => () => {\n    setView(newView);\n    setQuantity(\"\");\n  };\n\n  const trimmedsBASHBalance = trim(Number(sBASHBalance), 6);\n  const trimmedWrappedStakedSBBalance = trim(Number(wsBASHBalance), 6);\n  const wrappedTokenEquivalent = trim(Number(trimmedWrappedStakedSBBalance) * Number(currentIndex), 6);\n  const valueOfSB = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2\n  }).format(Number(BASHbalance) * app.marketPrice);\n  const valueOfStakedBalance = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2\n  }).format(Number(trimmedsBASHBalance) * app.marketPrice);\n  const valueOfWrappedStakedBalance = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2\n  }).format(Number(trimmedWrappedStakedSBBalance) * Number(currentIndex) * app.marketPrice);\n  const sumOfAllBalance = Number(BASHbalance) + Number(trimmedsBASHBalance) + Number(trimmedWrappedStakedSBBalance) * Number(currentIndex);\n  const valueOfAllBalance = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2\n  }).format(sumOfAllBalance * app.marketPrice);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap-view\",\n    children: [/*#__PURE__*/_jsxDEV(Zoom, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-card\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"wrap-card-grid\",\n          container: true,\n          direction: \"column\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrap-card-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"wrap-card-header-title\",\n                children: t(\"wrap:WrapTitle\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"wrap-card-header-subtitle\",\n                children: t(\"wrap:WrapYourBASH\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrap-card-metrics\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  md: 4,\n                  lg: 4,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"wrap-card-index\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"wrap-card-metrics-title\",\n                      children: t(\"CurrentIndex\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"wrap-card-metrics-value\",\n                      children: currentIndex ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [trim(Number(currentIndex), 2), \" BASH\"]\n                      }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n                        width: \"150px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 144\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-card-area\",\n            children: [!address && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrap-card-wallet-notification\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wrap-card-wallet-connect-btn\",\n                onClick: connect,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: t(\"ConnectWallet\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"wrap-card-wallet-desc-text\",\n                children: t(\"wrap:ConnectYourWalletToWrap\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this), address && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wrap-card-action-area\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"wrap-card-action-stage-btns-wrap\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: changeView(0),\n                    className: classnames(\"wrap-card-action-stage-btn\", {\n                      active: !view\n                    }),\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: t(\"wrap:Wrap\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: changeView(1),\n                    className: classnames(\"wrap-card-action-stage-btn\", {\n                      active: view\n                    }),\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: t(\"wrap:Unwrap\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"wrap-card-action-row\",\n                  children: [/*#__PURE__*/_jsxDEV(OutlinedInput, {\n                    type: \"number\",\n                    placeholder: t(\"Amount\"),\n                    className: \"wrap-card-action-input\",\n                    value: quantity,\n                    onChange: e => setQuantity(e.target.value),\n                    labelWidth: 0,\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: setMax,\n                        className: \"wrap-card-action-input-btn\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: t(\"Max\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 178,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 177,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 45\n                  }, this), view === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"wrap-card-tab-panel\",\n                    children: address && hasAllowance(\"sBASH\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"wrap-card-tab-panel-btn\",\n                      onClick: () => {\n                        if (isPendingTxn(pendingTransactions, \"wrapping\")) return;\n                        onChangeWrap(\"wrap\");\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: txnButtonText(pendingTransactions, \"wrapping\", t(\"Wrap sBASH\"))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 57\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"wrap-card-tab-panel-btn\",\n                      onClick: () => {\n                        if (isPendingTxn(pendingTransactions, \"approve_wrapping\")) return;\n                        onSeekApproval(\"sBASH\");\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: txnButtonText(pendingTransactions, \"approve_wrapping\", t(\"Approve\"))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 49\n                  }, this), view === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"wrap-card-tab-panel\",\n                    children: address ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"wrap-card-tab-panel-btn\",\n                      onClick: () => {\n                        if (isPendingTxn(pendingTransactions, \"unwrapping\")) return;\n                        onChangeWrap(\"unwrap\");\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: txnButtonText(pendingTransactions, \"unwrapping\", t(\"Unwrap wsBASH\"))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 57\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"wrap-card-tab-panel-btn\",\n                      onClick: () => {\n                        if (isPendingTxn(pendingTransactions, \"approve_unwrapping\")) return;\n                        onSeekApproval(\"sBASH\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"wrap-card-action-help-text\",\n                  children: address && (!hasAllowance(\"sBASH\") && view === 0 || !hasAllowance(\"sBASH\") && view === 1) && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: t(\"wrap:ApproveNote\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 143\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wrap-user-data\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"data-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-name\",\n                    children: t(\"YourBalance\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-value\",\n                    children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                      width: \"80px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 91\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [trim(Number(BASHbalance), 4), \" BASH\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"data-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-name\",\n                    children: t(\"wrap:YourStakedBalance\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-value\",\n                    children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                      width: \"80px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 91\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [trimmedsBASHBalance, \" sBASH\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 41\n                }, this), Number(trimmedWrappedStakedSBBalance) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"data-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-name\",\n                    children: t(\"wrap:YourWrappedStakedBalance\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-value\",\n                    children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                      width: \"80px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 95\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [trimmedWrappedStakedSBBalance, \" wsBASH\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 45\n                }, this), Number(trimmedWrappedStakedSBBalance) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"data-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-name\",\n                    children: t(\"wrap:WrappedTokenEquivalent\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-value\",\n                    children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                      width: \"80px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 95\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [\"(\", wrappedTokenEquivalent, \" sBASH)\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Zoom, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: address && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap-card\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: \"wrap-card-grid\",\n            container: true,\n            direction: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wrap-card-header data-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"wrap-card-header-title\",\n                  children: t(\"YourBalance\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"wrap-card-header-title\",\n                  children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                    width: \"80px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 95\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: valueOfAllBalance\n                  }, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrap-card-area\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"data-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-name\",\n                      children: t(\"wrap:ValueOfYourBASH\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-value\",\n                      children: [\" \", isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        width: \"80px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 96\n                      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: valueOfSB\n                      }, void 0, false)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"data-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-name\",\n                      children: t(\"wrap:ValueOfYourStakedBASH\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-value\",\n                      children: [\" \", isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        width: \"80px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 96\n                      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: valueOfStakedBalance\n                      }, void 0, false)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 45\n                  }, this), Number(trimmedWrappedStakedSBBalance) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"data-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-name\",\n                      children: t(\"wrap:ValueOfYourWrappedStakedSB\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-value\",\n                      children: [\" \", isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        width: \"80px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 299,\n                        columnNumber: 100\n                      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: valueOfWrappedStakedBalance\n                      }, void 0, false)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stake, \"A1XzlzLtHc8UngCBkbPVJxpPhHw=\", false, function () {\n  return [useTranslation, useDispatch, useWeb3Context, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Stake;\nexport default Stake;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stake\");","map":{"version":3,"sources":["/home/beard/Documents/V1Frontend/v1-frontend/src/views/Wrap/index.tsx"],"names":["useState","useCallback","useSelector","useDispatch","Grid","InputAdornment","OutlinedInput","Zoom","trim","changeWrap","changeApproval","useWeb3Context","isPendingTxn","txnButtonText","Skeleton","messages","classnames","warning","useTranslation","Stake","t","dispatch","provider","address","connect","chainID","checkWrongNetwork","app","state","view","setView","quantity","setQuantity","isAppLoading","loading","currentIndex","wrapAllowance","console","log","account","wrapping","sBASHAllowance","BASHbalance","balances","BASH","sBASHBalance","sBASH","wsBASHBalance","wsBASH","pendingTransactions","setMax","onSeekApproval","token","networkID","onChangeWrap","action","parseFloat","text","before_wrap","before_unstake","value","String","hasAllowance","changeView","newView","trimmedsBASHBalance","Number","trimmedWrappedStakedSBBalance","wrappedTokenEquivalent","valueOfSB","Intl","NumberFormat","style","currency","maximumFractionDigits","minimumFractionDigits","format","marketPrice","valueOfStakedBalance","valueOfWrappedStakedBalance","sumOfAllBalance","valueOfAllBalance","active","e","target"],"mappings":"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","sourcesContent":["import { useState, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, InputAdornment, OutlinedInput, Zoom } from \"@material-ui/core\";\nimport RebaseTimer from \"../../components/RebaseTimer\";\nimport { trim } from \"../../helpers\";\nimport { changeWrap, changeApproval } from \"../../store/slices/wrap-thunk\";\nimport \"./wrap.scss\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { IPendingTxn, isPendingTxn, txnButtonText } from \"../../store/slices/pending-txns-slice\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\nimport { messages } from \"../../constants/messages\";\nimport classnames from \"classnames\";\nimport { warning } from \"../../store/slices/messages-slice\";\nimport { IAppSlice } from \"../../store/slices/app-slice\";\n\nimport { useTranslation } from \"react-i18next\";\n\nfunction Stake() {\n    const { t } = useTranslation();\n\n    const dispatch = useDispatch();\n    const { provider, address, connect, chainID, checkWrongNetwork } = useWeb3Context();\n    const app = useSelector<IReduxState, IAppSlice>(state => state.app);\n\n    const [view, setView] = useState(0);\n    const [quantity, setQuantity] = useState<string>(\"\");\n\n    const isAppLoading = useSelector<IReduxState, boolean>(state => state.app.loading);\n    const currentIndex = useSelector<IReduxState, string>(state => {\n        return state.app.currentIndex;\n    });\n\n    const wrapAllowance = useSelector<IReduxState, number>(state => {\n        console.log(state.account.wrapping.sBASHAllowance);\n        return state.account.wrapping.sBASHAllowance;\n    });\n    const BASHbalance = useSelector<IReduxState, string>(state => {\n        return state.account.balances && state.account.balances.BASH;\n    });\n    const sBASHBalance = useSelector<IReduxState, string>(state => {\n        return state.account.balances && state.account.balances.sBASH;\n    });\n    const wsBASHBalance = useSelector<IReduxState, string>(state => {\n        return state.account.balances && state.account.balances.wsBASH;\n    });\n\n    const pendingTransactions = useSelector<IReduxState, IPendingTxn[]>(state => {\n        return state.pendingTransactions;\n    });\n\n    const setMax = () => {\n        if (view === 0) {\n            setQuantity(sBASHBalance);\n        } else {\n            setQuantity(wsBASHBalance);\n        }\n    };\n\n    const onSeekApproval = async (token: string) => {\n        if (await checkWrongNetwork()) return;\n\n        await dispatch(changeApproval({ address, token, provider, networkID: chainID }));\n    };\n\n    const onChangeWrap = async (action: string) => {\n        if (await checkWrongNetwork()) return;\n        if (quantity === \"\" || parseFloat(quantity) === 0) {\n            dispatch(warning({ text: action === \"wrap\" ? messages.before_wrap : messages.before_unstake }));\n        } else {\n            await dispatch(changeWrap({ address, action, value: String(quantity), provider, networkID: chainID }));\n            setQuantity(\"\");\n        }\n    };\n\n    const hasAllowance = useCallback(\n        token => {\n            if (token === \"sBASH\") return wrapAllowance > 0;\n            if (token === \"wsBASH\") return true;\n            return 0;\n        },\n        [wrapAllowance],\n    );\n\n    const changeView = (newView: number) => () => {\n        setView(newView);\n        setQuantity(\"\");\n    };\n\n    const trimmedsBASHBalance = trim(Number(sBASHBalance), 6);\n    const trimmedWrappedStakedSBBalance = trim(Number(wsBASHBalance), 6);\n\n    const wrappedTokenEquivalent = trim(Number(trimmedWrappedStakedSBBalance) * Number(currentIndex), 6);\n    const valueOfSB = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 2,\n        minimumFractionDigits: 2,\n    }).format(Number(BASHbalance) * app.marketPrice);\n    const valueOfStakedBalance = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 2,\n        minimumFractionDigits: 2,\n    }).format(Number(trimmedsBASHBalance) * app.marketPrice);\n    const valueOfWrappedStakedBalance = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 2,\n        minimumFractionDigits: 2,\n    }).format(Number(trimmedWrappedStakedSBBalance) * Number(currentIndex) * app.marketPrice);\n\n    const sumOfAllBalance = Number(BASHbalance) + Number(trimmedsBASHBalance) + Number(trimmedWrappedStakedSBBalance) * Number(currentIndex);\n    const valueOfAllBalance = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 2,\n        minimumFractionDigits: 2,\n    }).format(sumOfAllBalance * app.marketPrice);\n\n    return (\n        <div className=\"wrap-view\">\n            <Zoom in={true}>\n                <div className=\"wrap-card\">\n                    <Grid className=\"wrap-card-grid\" container direction=\"column\" spacing={2}>\n                        <Grid item>\n                            <div className=\"wrap-card-header\">\n                                <p className=\"wrap-card-header-title\">{t(\"wrap:WrapTitle\")}</p>\n                                <p className=\"wrap-card-header-subtitle\">{t(\"wrap:WrapYourBASH\")}</p>\n                            </div>\n                        </Grid>\n\n                        <Grid item>\n                            <div className=\"wrap-card-metrics\">\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} sm={4} md={4} lg={4}>\n                                        <div className=\"wrap-card-index\">\n                                            <p className=\"wrap-card-metrics-title\">{t(\"CurrentIndex\")}</p>\n                                            <p className=\"wrap-card-metrics-value\">{currentIndex ? <>{trim(Number(currentIndex), 2)} BASH</> : <Skeleton width=\"150px\" />}</p>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n\n                        <div className=\"wrap-card-area\">\n                            {!address && (\n                                <div className=\"wrap-card-wallet-notification\">\n                                    <div className=\"wrap-card-wallet-connect-btn\" onClick={connect}>\n                                        <p>{t(\"ConnectWallet\")}</p>\n                                    </div>\n                                    <p className=\"wrap-card-wallet-desc-text\">{t(\"wrap:ConnectYourWalletToWrap\")}</p>\n                                </div>\n                            )}\n                            {address && (\n                                <div>\n                                    <div className=\"wrap-card-action-area\">\n                                        <div className=\"wrap-card-action-stage-btns-wrap\">\n                                            <div onClick={changeView(0)} className={classnames(\"wrap-card-action-stage-btn\", { active: !view })}>\n                                                <p>{t(\"wrap:Wrap\")}</p>\n                                            </div>\n                                            <div onClick={changeView(1)} className={classnames(\"wrap-card-action-stage-btn\", { active: view })}>\n                                                <p>{t(\"wrap:Unwrap\")}</p>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"wrap-card-action-row\">\n                                            <OutlinedInput\n                                                type=\"number\"\n                                                placeholder={t(\"Amount\")}\n                                                className=\"wrap-card-action-input\"\n                                                value={quantity}\n                                                onChange={e => setQuantity(e.target.value)}\n                                                labelWidth={0}\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <div onClick={setMax} className=\"wrap-card-action-input-btn\">\n                                                            <p>{t(\"Max\")}</p>\n                                                        </div>\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                            {view === 0 && (\n                                                <div className=\"wrap-card-tab-panel\">\n                                                    {address && hasAllowance(\"sBASH\") ? (\n                                                        <div\n                                                            className=\"wrap-card-tab-panel-btn\"\n                                                            onClick={() => {\n                                                                if (isPendingTxn(pendingTransactions, \"wrapping\")) return;\n                                                                onChangeWrap(\"wrap\");\n                                                            }}\n                                                        >\n                                                            <p>{txnButtonText(pendingTransactions, \"wrapping\", t(\"Wrap sBASH\"))}</p>\n                                                        </div>\n                                                    ) : (\n                                                        <div\n                                                            className=\"wrap-card-tab-panel-btn\"\n                                                            onClick={() => {\n                                                                if (isPendingTxn(pendingTransactions, \"approve_wrapping\")) return;\n                                                                onSeekApproval(\"sBASH\");\n                                                            }}\n                                                        >\n                                                            <p>{txnButtonText(pendingTransactions, \"approve_wrapping\", t(\"Approve\"))}</p>\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            )}\n\n                                            {view === 1 && (\n                                                <div className=\"wrap-card-tab-panel\">\n                                                    {address ? (\n                                                        <div\n                                                            className=\"wrap-card-tab-panel-btn\"\n                                                            onClick={() => {\n                                                                if (isPendingTxn(pendingTransactions, \"unwrapping\")) return;\n                                                                onChangeWrap(\"unwrap\");\n                                                            }}\n                                                        >\n                                                            <p>{txnButtonText(pendingTransactions, \"unwrapping\", t(\"Unwrap wsBASH\"))}</p>\n                                                        </div>\n                                                    ) : (\n                                                        <div\n                                                            className=\"wrap-card-tab-panel-btn\"\n                                                            onClick={() => {\n                                                                if (isPendingTxn(pendingTransactions, \"approve_unwrapping\")) return;\n                                                                onSeekApproval(\"sBASH\");\n                                                            }}\n                                                        ></div>\n                                                    )}\n                                                </div>\n                                            )}\n                                        </div>\n\n                                        <div className=\"wrap-card-action-help-text\">\n                                            {address && ((!hasAllowance(\"sBASH\") && view === 0) || (!hasAllowance(\"sBASH\") && view === 1)) && <p>{t(\"wrap:ApproveNote\")}</p>}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"wrap-user-data\">\n                                        <div className=\"data-row\">\n                                            <p className=\"data-row-name\">{t(\"YourBalance\")}</p>\n                                            <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{trim(Number(BASHbalance), 4)} BASH</>}</p>\n                                        </div>\n\n                                        <div className=\"data-row\">\n                                            <p className=\"data-row-name\">{t(\"wrap:YourStakedBalance\")}</p>\n                                            <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{trimmedsBASHBalance} sBASH</>}</p>\n                                        </div>\n\n                                        {Number(trimmedWrappedStakedSBBalance) > 0 && (\n                                            <div className=\"data-row\">\n                                                <p className=\"data-row-name\">{t(\"wrap:YourWrappedStakedBalance\")}</p>\n                                                <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{trimmedWrappedStakedSBBalance} wsBASH</>}</p>\n                                            </div>\n                                        )}\n\n                                        {Number(trimmedWrappedStakedSBBalance) > 0 && (\n                                            <div className=\"data-row\">\n                                                <p className=\"data-row-name\">{t(\"wrap:WrappedTokenEquivalent\")}</p>\n                                                <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>({wrappedTokenEquivalent} sBASH)</>}</p>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </Grid>\n                </div>\n            </Zoom>\n            <Zoom in={true}>\n                <div>\n                    {address && (\n                        <div className=\"wrap-card\">\n                            <Grid className=\"wrap-card-grid\" container direction=\"column\">\n                                <Grid item>\n                                    <div className=\"wrap-card-header data-row\">\n                                        <p className=\"wrap-card-header-title\">{t(\"YourBalance\")}</p>\n                                        <p className=\"wrap-card-header-title\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{valueOfAllBalance}</>}</p>\n                                    </div>\n                                </Grid>\n\n                                <div className=\"wrap-card-area\">\n                                    <div>\n                                        <div className=\"\">\n                                            <div className=\"data-row\">\n                                                <p className=\"data-row-name\">{t(\"wrap:ValueOfYourBASH\")}</p>\n                                                <p className=\"data-row-value\"> {isAppLoading ? <Skeleton width=\"80px\" /> : <>{valueOfSB}</>}</p>\n                                            </div>\n\n                                            <div className=\"data-row\">\n                                                <p className=\"data-row-name\">{t(\"wrap:ValueOfYourStakedBASH\")}</p>\n                                                <p className=\"data-row-value\"> {isAppLoading ? <Skeleton width=\"80px\" /> : <>{valueOfStakedBalance}</>}</p>\n                                            </div>\n\n                                            {Number(trimmedWrappedStakedSBBalance) > 0 && (\n                                                <div className=\"data-row\">\n                                                    <p className=\"data-row-name\">{t(\"wrap:ValueOfYourWrappedStakedSB\")}</p>\n                                                    <p className=\"data-row-value\"> {isAppLoading ? <Skeleton width=\"80px\" /> : <>{valueOfWrappedStakedBalance}</>}</p>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                            </Grid>\n                        </div>\n                    )}\n                </div>\n            </Zoom>\n        </div>\n    );\n}\n\nexport default Stake;\n"]},"metadata":{},"sourceType":"module"}