{"ast":null,"code":"import { Networks } from \"./blockchain\";\nconst AVAX_MAINNET = {\n  DAO_ADDRESS: \"0x31940eE01803476a970ec6DF1094a53F80e6827b\",\n  SBASH_ADDRESS: \"0xB062c51d940bA086e998a113f2975D54f35fFf52\",\n  WSBASH_ADDRESS: \"0x31C4c046EFAD4B04b823a919CC0bDd0f663c87d4\",\n  BASH_ADDRESS: \"0x182b988416Cde1B5D302c8D8162014CAd700FCA7\",\n  MIM_ADDRESS: \"0xB592C2BAd520B1a0E0C7955b74Eb30e817be8D10\",\n  STAKING_ADDRESS: \"0xC12b522cfBf1a8a23C4015f7f491811142828B5F\",\n  STAKING_HELPER_ADDRESS: \"0x494344476c61b13A9664DC40f8cEEd01947FCe40\",\n  BASH_BONDING_CALC_ADDRESS: \"0xA5c7347C251E32FeaEDBD5d60dCd92524073Cc20\",\n  TREASURY_ADDRESS: \"0xF89c4cA8CC3fb50aDdbE6f77E680fCFA87458A88\",\n  ZAPIN_ADDRESS: \"0xb4e6426AE18E7348e54Dd425eC5853cd391d442d\",\n  REDEEM_ADDRESS: \"0xFc3625cD7a5C9D40BfE6EE075A73867B32073f5E\"\n};\nconst RINKEBY = {\n  DAO_ADDRESS: \"0x000000000000000000000000000000000000dead\",\n  SBASH_ADDRESS: \"0xA3D2c84E38f701aC2A8C3193018a99CCB7623c54\",\n  WSBASH_ADDRESS: \"0x261412fC75d9B7e47AaBF01Ed98C26f5A7041935\",\n  BASH_ADDRESS: \"0xc5c5C42871b625ec2Bd1Ac2e2eC96B2b37D4a06E\",\n  MIM_ADDRESS: \"0x278876C56c622eDeDD96Ff3E64218a5047509885\",\n  STAKING_ADDRESS: \"0xCd7EF180d3a5De645093ddC6609D1C6473b3d7AD\",\n  STAKING_HELPER_ADDRESS: \"0x22a6e2cBaD49bae017bf19d683306f88E0d1c779\",\n  BASH_BONDING_CALC_ADDRESS: \"0xE8B4cD0BA353540FF211Cd4799d7e07506600952\",\n  TREASURY_ADDRESS: \"0x7A5CFacad0A2fB373deFE5F49D23DC5952781Bb9\",\n  ZAPIN_ADDRESS: \"0xb4e6426AE18E7348e54Dd425eC5853cd391d442d\",\n  REDEEM_ADDRESS: \"0xEefefC641cB549d2a43fe0F1cC385fE2c5e75d9d\"\n};\nexport const getAddresses = networkID => {\n  if (networkID === Networks.AVAX) return RINKEBY;\n  if (networkID === Networks.RINKEBY) return RINKEBY;\n  throw Error(\"Network don't support\");\n};","map":{"version":3,"sources":["/home/beard/Documents/V1Frontend/v1-frontend/src/constants/addresses.ts"],"names":["Networks","AVAX_MAINNET","DAO_ADDRESS","SBASH_ADDRESS","WSBASH_ADDRESS","BASH_ADDRESS","MIM_ADDRESS","STAKING_ADDRESS","STAKING_HELPER_ADDRESS","BASH_BONDING_CALC_ADDRESS","TREASURY_ADDRESS","ZAPIN_ADDRESS","REDEEM_ADDRESS","RINKEBY","getAddresses","networkID","AVAX","Error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,4CADI;AAEjBC,EAAAA,aAAa,EAAE,4CAFE;AAGjBC,EAAAA,cAAc,EAAE,4CAHC;AAIjBC,EAAAA,YAAY,EAAE,4CAJG;AAKjBC,EAAAA,WAAW,EAAE,4CALI;AAMjBC,EAAAA,eAAe,EAAE,4CANA;AAOjBC,EAAAA,sBAAsB,EAAE,4CAPP;AAQjBC,EAAAA,yBAAyB,EAAE,4CARV;AASjBC,EAAAA,gBAAgB,EAAE,4CATD;AAUjBC,EAAAA,aAAa,EAAE,4CAVE;AAWjBC,EAAAA,cAAc,EAAE;AAXC,CAArB;AAcA,MAAMC,OAAO,GAAG;AACZX,EAAAA,WAAW,EAAE,4CADD;AAEZC,EAAAA,aAAa,EAAE,4CAFH;AAGZC,EAAAA,cAAc,EAAE,4CAHJ;AAIZC,EAAAA,YAAY,EAAE,4CAJF;AAKZC,EAAAA,WAAW,EAAE,4CALD;AAMZC,EAAAA,eAAe,EAAE,4CANL;AAOZC,EAAAA,sBAAsB,EAAE,4CAPZ;AAQZC,EAAAA,yBAAyB,EAAE,4CARf;AASZC,EAAAA,gBAAgB,EAAE,4CATN;AAUZC,EAAAA,aAAa,EAAE,4CAVH;AAWZC,EAAAA,cAAc,EAAE;AAXJ,CAAhB;AAcA,OAAO,MAAME,YAAY,GAAIC,SAAD,IAAuB;AAC/C,MAAIA,SAAS,KAAKf,QAAQ,CAACgB,IAA3B,EAAiC,OAAOH,OAAP;AAEjC,MAAIE,SAAS,KAAKf,QAAQ,CAACa,OAA3B,EAAoC,OAAOA,OAAP;AAEpC,QAAMI,KAAK,CAAC,uBAAD,CAAX;AACH,CANM","sourcesContent":["import { Networks } from \"./blockchain\";\n\nconst AVAX_MAINNET = {\n    DAO_ADDRESS: \"0x31940eE01803476a970ec6DF1094a53F80e6827b\",\n    SBASH_ADDRESS: \"0xB062c51d940bA086e998a113f2975D54f35fFf52\",\n    WSBASH_ADDRESS: \"0x31C4c046EFAD4B04b823a919CC0bDd0f663c87d4\",\n    BASH_ADDRESS: \"0x182b988416Cde1B5D302c8D8162014CAd700FCA7\",\n    MIM_ADDRESS: \"0xB592C2BAd520B1a0E0C7955b74Eb30e817be8D10\",\n    STAKING_ADDRESS: \"0xC12b522cfBf1a8a23C4015f7f491811142828B5F\",\n    STAKING_HELPER_ADDRESS: \"0x494344476c61b13A9664DC40f8cEEd01947FCe40\",\n    BASH_BONDING_CALC_ADDRESS: \"0xA5c7347C251E32FeaEDBD5d60dCd92524073Cc20\",\n    TREASURY_ADDRESS: \"0xF89c4cA8CC3fb50aDdbE6f77E680fCFA87458A88\",\n    ZAPIN_ADDRESS: \"0xb4e6426AE18E7348e54Dd425eC5853cd391d442d\",\n    REDEEM_ADDRESS: \"0xFc3625cD7a5C9D40BfE6EE075A73867B32073f5E\",\n};\n\nconst RINKEBY = {\n    DAO_ADDRESS: \"0x000000000000000000000000000000000000dead\",\n    SBASH_ADDRESS: \"0xA3D2c84E38f701aC2A8C3193018a99CCB7623c54\",\n    WSBASH_ADDRESS: \"0x261412fC75d9B7e47AaBF01Ed98C26f5A7041935\",\n    BASH_ADDRESS: \"0xc5c5C42871b625ec2Bd1Ac2e2eC96B2b37D4a06E\",\n    MIM_ADDRESS: \"0x278876C56c622eDeDD96Ff3E64218a5047509885\",\n    STAKING_ADDRESS: \"0xCd7EF180d3a5De645093ddC6609D1C6473b3d7AD\",\n    STAKING_HELPER_ADDRESS: \"0x22a6e2cBaD49bae017bf19d683306f88E0d1c779\",\n    BASH_BONDING_CALC_ADDRESS: \"0xE8B4cD0BA353540FF211Cd4799d7e07506600952\",\n    TREASURY_ADDRESS: \"0x7A5CFacad0A2fB373deFE5F49D23DC5952781Bb9\",\n    ZAPIN_ADDRESS: \"0xb4e6426AE18E7348e54Dd425eC5853cd391d442d\",\n    REDEEM_ADDRESS: \"0xEefefC641cB549d2a43fe0F1cC385fE2c5e75d9d\",\n};\n\nexport const getAddresses = (networkID: number) => {\n    if (networkID === Networks.AVAX) return RINKEBY;\n\n    if (networkID === Networks.RINKEBY) return RINKEBY;\n\n    throw Error(\"Network don't support\");\n};\n"]},"metadata":{},"sourceType":"module"}