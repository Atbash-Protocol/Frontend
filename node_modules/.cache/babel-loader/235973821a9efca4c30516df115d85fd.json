{"ast":null,"code":"import { ethers } from \"ethers\";\nimport { LpReserveContract } from \"../abi\";\nimport { BASHUSDC } from \"../helpers/bond\";\nexport async function getMarketPrice(networkID, provider) {\n  const BASHUSDCAddress = BASHUSDC.getAddressForReserve(networkID);\n  const pairContract = new ethers.Contract(BASHUSDCAddress, LpReserveContract, provider);\n  const reserves = await pairContract.getReserves();\n  const marketPrice = reserves[0] / reserves[1];\n  return marketPrice;\n}","map":{"version":3,"sources":["/home/beard/Documents/V1Frontend/v1-frontend/src/helpers/get-market-price.ts"],"names":["ethers","LpReserveContract","BASHUSDC","getMarketPrice","networkID","provider","BASHUSDCAddress","getAddressForReserve","pairContract","Contract","reserves","getReserves","marketPrice"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAGA,OAAO,eAAeC,cAAf,CAA8BC,SAA9B,EAAmDC,QAAnD,EAAyH;AAC5H,QAAMC,eAAe,GAAGJ,QAAQ,CAACK,oBAAT,CAA8BH,SAA9B,CAAxB;AACA,QAAMI,YAAY,GAAG,IAAIR,MAAM,CAACS,QAAX,CAAoBH,eAApB,EAAqCL,iBAArC,EAAwDI,QAAxD,CAArB;AACA,QAAMK,QAAQ,GAAG,MAAMF,YAAY,CAACG,WAAb,EAAvB;AACA,QAAMC,WAAW,GAAGF,QAAQ,CAAC,CAAD,CAAR,GAAcA,QAAQ,CAAC,CAAD,CAA1C;AACA,SAAOE,WAAP;AACH","sourcesContent":["import { ethers } from \"ethers\";\nimport { LpReserveContract } from \"../abi\";\nimport { BASHUSDC } from \"../helpers/bond\";\nimport { Networks } from \"../constants/blockchain\";\n\nexport async function getMarketPrice(networkID: Networks, provider: ethers.Signer | ethers.providers.Provider): Promise<number> {\n    const BASHUSDCAddress = BASHUSDC.getAddressForReserve(networkID);\n    const pairContract = new ethers.Contract(BASHUSDCAddress, LpReserveContract, provider);\n    const reserves = await pairContract.getReserves();\n    const marketPrice = reserves[0] / reserves[1];\n    return marketPrice;\n}\n"]},"metadata":{},"sourceType":"module"}