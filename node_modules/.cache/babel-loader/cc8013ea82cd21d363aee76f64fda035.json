{"ast":null,"code":"import { Networks } from \"./blockchain\";\nconst MAINNET = {\n  DAO_ADDRESS: \"0x31940eE01803476a970ec6DF1094a53F80e6827b\",\n  SBASH_ADDRESS: \"0xB062c51d940bA086e998a113f2975D54f35fFf52\",\n  WSBASH_ADDRESS: \"0x31C4c046EFAD4B04b823a919CC0bDd0f663c87d4\",\n  BASH_ADDRESS: \"0x182b988416Cde1B5D302c8D8162014CAd700FCA7\",\n  MIM_ADDRESS: \"0xB592C2BAd520B1a0E0C7955b74Eb30e817be8D10\",\n  STAKING_ADDRESS: \"0xC12b522cfBf1a8a23C4015f7f491811142828B5F\",\n  STAKING_HELPER_ADDRESS: \"0x494344476c61b13A9664DC40f8cEEd01947FCe40\",\n  BASH_BONDING_CALC_ADDRESS: \"0xA5c7347C251E32FeaEDBD5d60dCd92524073Cc20\",\n  TREASURY_ADDRESS: \"0xF89c4cA8CC3fb50aDdbE6f77E680fCFA87458A88\",\n  ZAPIN_ADDRESS: \"0xb4e6426AE18E7348e54Dd425eC5853cd391d442d\",\n  REDEEM_ADDRESS: \"0xFc3625cD7a5C9D40BfE6EE075A73867B32073f5E\"\n};\nconst RINKEBY = {\n  DAO_ADDRESS: \"0x000000000000000000000000000000000000dead\",\n  SBASH_ADDRESS: \"0x35460B7622563CCBFAEaAdaD6598d51fe76426b3\",\n  WSBASH_ADDRESS: \"0x3e48E730245CB24bceBe4FEd704aFA98Db00D0ae\",\n  BASH_ADDRESS: \"0x6C538aDf35d1927497090e6971Fc46D8ed813dF6\",\n  MIM_ADDRESS: \"0xdc7B08BB2AbcE1BA5b82509115F3fb7358E412aB\",\n  STAKING_ADDRESS: \"0x1eFDbA2036E5098c7952a062B2AA7ECe146c4e63\",\n  STAKING_HELPER_ADDRESS: \"0x52C3142d47a4c2a3a85c9F53a81F354Fc620EBd4\",\n  BASH_BONDING_CALC_ADDRESS: \"0x6Aa778fA20495E646D99aF470B567199CA037163\",\n  TREASURY_ADDRESS: \"0xe44ab339aC924C6C43DB0DeE3C021dC7A8a2951ad\",\n  ZAPIN_ADDRESS: \"0xb4e6426AE18E7348e54Dd425eC5853cd391d442d\",\n  REDEEM_ADDRESS: \"0xEefefC641cB549d2a43fe0F1cC385fE2c5e75d9d\"\n};\nexport const getAddresses = networkID => {\n  if (networkID === Networks.MAINNET) return RINKEBY;\n  if (networkID === Networks.RINKEBY) return RINKEBY;\n  throw Error(\"Network don't support\");\n};","map":{"version":3,"sources":["/home/beard/Documents/V1Frontend/v1-frontend/src/constants/addresses.ts"],"names":["Networks","MAINNET","DAO_ADDRESS","SBASH_ADDRESS","WSBASH_ADDRESS","BASH_ADDRESS","MIM_ADDRESS","STAKING_ADDRESS","STAKING_HELPER_ADDRESS","BASH_BONDING_CALC_ADDRESS","TREASURY_ADDRESS","ZAPIN_ADDRESS","REDEEM_ADDRESS","RINKEBY","getAddresses","networkID","Error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,WAAW,EAAE,4CADD;AAEZC,EAAAA,aAAa,EAAE,4CAFH;AAGZC,EAAAA,cAAc,EAAE,4CAHJ;AAIZC,EAAAA,YAAY,EAAE,4CAJF;AAKZC,EAAAA,WAAW,EAAE,4CALD;AAMZC,EAAAA,eAAe,EAAE,4CANL;AAOZC,EAAAA,sBAAsB,EAAE,4CAPZ;AAQZC,EAAAA,yBAAyB,EAAE,4CARf;AASZC,EAAAA,gBAAgB,EAAE,4CATN;AAUZC,EAAAA,aAAa,EAAE,4CAVH;AAWZC,EAAAA,cAAc,EAAE;AAXJ,CAAhB;AAcA,MAAMC,OAAO,GAAG;AACZX,EAAAA,WAAW,EAAE,4CADD;AAEZC,EAAAA,aAAa,EAAE,4CAFH;AAGZC,EAAAA,cAAc,EAAE,4CAHJ;AAIZC,EAAAA,YAAY,EAAE,4CAJF;AAKZC,EAAAA,WAAW,EAAE,4CALD;AAMZC,EAAAA,eAAe,EAAE,4CANL;AAOZC,EAAAA,sBAAsB,EAAE,4CAPZ;AAQZC,EAAAA,yBAAyB,EAAE,4CARf;AASZC,EAAAA,gBAAgB,EAAE,6CATN;AAUZC,EAAAA,aAAa,EAAE,4CAVH;AAWZC,EAAAA,cAAc,EAAE;AAXJ,CAAhB;AAcA,OAAO,MAAME,YAAY,GAAIC,SAAD,IAAuB;AAC/C,MAAIA,SAAS,KAAKf,QAAQ,CAACC,OAA3B,EAAoC,OAAOY,OAAP;AAEpC,MAAIE,SAAS,KAAKf,QAAQ,CAACa,OAA3B,EAAoC,OAAOA,OAAP;AAEpC,QAAMG,KAAK,CAAC,uBAAD,CAAX;AACH,CANM","sourcesContent":["import { Networks } from \"./blockchain\";\n\nconst MAINNET = {\n    DAO_ADDRESS: \"0x31940eE01803476a970ec6DF1094a53F80e6827b\",\n    SBASH_ADDRESS: \"0xB062c51d940bA086e998a113f2975D54f35fFf52\",\n    WSBASH_ADDRESS: \"0x31C4c046EFAD4B04b823a919CC0bDd0f663c87d4\",\n    BASH_ADDRESS: \"0x182b988416Cde1B5D302c8D8162014CAd700FCA7\",\n    MIM_ADDRESS: \"0xB592C2BAd520B1a0E0C7955b74Eb30e817be8D10\",\n    STAKING_ADDRESS: \"0xC12b522cfBf1a8a23C4015f7f491811142828B5F\",\n    STAKING_HELPER_ADDRESS: \"0x494344476c61b13A9664DC40f8cEEd01947FCe40\",\n    BASH_BONDING_CALC_ADDRESS: \"0xA5c7347C251E32FeaEDBD5d60dCd92524073Cc20\",\n    TREASURY_ADDRESS: \"0xF89c4cA8CC3fb50aDdbE6f77E680fCFA87458A88\",\n    ZAPIN_ADDRESS: \"0xb4e6426AE18E7348e54Dd425eC5853cd391d442d\",\n    REDEEM_ADDRESS: \"0xFc3625cD7a5C9D40BfE6EE075A73867B32073f5E\",\n};\n\nconst RINKEBY = {\n    DAO_ADDRESS: \"0x000000000000000000000000000000000000dead\",\n    SBASH_ADDRESS: \"0x35460B7622563CCBFAEaAdaD6598d51fe76426b3\",\n    WSBASH_ADDRESS: \"0x3e48E730245CB24bceBe4FEd704aFA98Db00D0ae\",\n    BASH_ADDRESS: \"0x6C538aDf35d1927497090e6971Fc46D8ed813dF6\",\n    MIM_ADDRESS: \"0xdc7B08BB2AbcE1BA5b82509115F3fb7358E412aB\",\n    STAKING_ADDRESS: \"0x1eFDbA2036E5098c7952a062B2AA7ECe146c4e63\",\n    STAKING_HELPER_ADDRESS: \"0x52C3142d47a4c2a3a85c9F53a81F354Fc620EBd4\",\n    BASH_BONDING_CALC_ADDRESS: \"0x6Aa778fA20495E646D99aF470B567199CA037163\",\n    TREASURY_ADDRESS: \"0xe44ab339aC924C6C43DB0DeE3C021dC7A8a2951ad\",\n    ZAPIN_ADDRESS: \"0xb4e6426AE18E7348e54Dd425eC5853cd391d442d\",\n    REDEEM_ADDRESS: \"0xEefefC641cB549d2a43fe0F1cC385fE2c5e75d9d\",\n};\n\nexport const getAddresses = (networkID: number) => {\n    if (networkID === Networks.MAINNET) return RINKEBY;\n\n    if (networkID === Networks.RINKEBY) return RINKEBY;\n\n    throw Error(\"Network don't support\");\n};\n"]},"metadata":{},"sourceType":"module"}